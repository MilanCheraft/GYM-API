// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.PE.Milan_Cheraft.Infrastructure.Data;

#nullable disable

namespace Pri.PE.Milan_Cheraft.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.Property<int>("ExercisesId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutsId")
                        .HasColumnType("int");

                    b.HasKey("ExercisesId", "WorkoutsId");

                    b.HasIndex("WorkoutsId");

                    b.ToTable("ExerciseWorkout");

                    b.HasData(
                        new
                        {
                            ExercisesId = 1,
                            WorkoutsId = 1
                        },
                        new
                        {
                            ExercisesId = 2,
                            WorkoutsId = 1
                        },
                        new
                        {
                            ExercisesId = 3,
                            WorkoutsId = 1
                        },
                        new
                        {
                            ExercisesId = 4,
                            WorkoutsId = 1
                        },
                        new
                        {
                            ExercisesId = 5,
                            WorkoutsId = 2
                        },
                        new
                        {
                            ExercisesId = 6,
                            WorkoutsId = 2
                        },
                        new
                        {
                            ExercisesId = 7,
                            WorkoutsId = 2
                        },
                        new
                        {
                            ExercisesId = 8,
                            WorkoutsId = 3
                        },
                        new
                        {
                            ExercisesId = 9,
                            WorkoutsId = 3
                        },
                        new
                        {
                            ExercisesId = 10,
                            WorkoutsId = 3
                        },
                        new
                        {
                            ExercisesId = 11,
                            WorkoutsId = 4
                        },
                        new
                        {
                            ExercisesId = 12,
                            WorkoutsId = 4
                        },
                        new
                        {
                            ExercisesId = 13,
                            WorkoutsId = 4
                        },
                        new
                        {
                            ExercisesId = 14,
                            WorkoutsId = 5
                        },
                        new
                        {
                            ExercisesId = 15,
                            WorkoutsId = 5
                        },
                        new
                        {
                            ExercisesId = 16,
                            WorkoutsId = 5
                        },
                        new
                        {
                            ExercisesId = 17,
                            WorkoutsId = 6
                        },
                        new
                        {
                            ExercisesId = 18,
                            WorkoutsId = 6
                        },
                        new
                        {
                            ExercisesId = 19,
                            WorkoutsId = 6
                        },
                        new
                        {
                            ExercisesId = 20,
                            WorkoutsId = 6
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Trainer",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Trainer",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "4"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "5"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "6"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "7"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "8"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "9"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Client",
                            UserId = "10"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "15/05/1990 0:00:00",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "20/08/1985 0:00:00",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "10/03/1995 0:00:00",
                            UserId = "3"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "25/11/1988 0:00:00",
                            UserId = "4"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "5/07/1992 0:00:00",
                            UserId = "5"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "18/09/1983 0:00:00",
                            UserId = "6"
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "30/12/1998 0:00:00",
                            UserId = "7"
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "8/04/1991 0:00:00",
                            UserId = "8"
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "14/02/1987 0:00:00",
                            UserId = "9"
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ClaimValue = "29/06/1993 0:00:00",
                            UserId = "10"
                        },
                        new
                        {
                            Id = 21,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "john.doe@example.com",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 22,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "JANESMITH",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 23,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "mike.johnson@example.com",
                            UserId = "3"
                        },
                        new
                        {
                            Id = 24,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "emily.brown@example.com",
                            UserId = "4"
                        },
                        new
                        {
                            Id = 25,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "chris.williams@example.com",
                            UserId = "5"
                        },
                        new
                        {
                            Id = 26,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "sarah.taylor@example.com",
                            UserId = "6"
                        },
                        new
                        {
                            Id = 27,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "kevin.miller@example.com",
                            UserId = "7"
                        },
                        new
                        {
                            Id = 28,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "jessica.wilson@example.com",
                            UserId = "8"
                        },
                        new
                        {
                            Id = 29,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "david.anderson@example.com",
                            UserId = "9"
                        },
                        new
                        {
                            Id = 30,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "amanda.clark@example.com",
                            UserId = "10"
                        },
                        new
                        {
                            Id = 31,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "1",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 32,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "2",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 33,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "3",
                            UserId = "3"
                        },
                        new
                        {
                            Id = 34,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "4",
                            UserId = "4"
                        },
                        new
                        {
                            Id = 35,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "5",
                            UserId = "5"
                        },
                        new
                        {
                            Id = 36,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "6",
                            UserId = "6"
                        },
                        new
                        {
                            Id = 37,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "7",
                            UserId = "7"
                        },
                        new
                        {
                            Id = 38,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "8",
                            UserId = "8"
                        },
                        new
                        {
                            Id = 39,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "9",
                            UserId = "9"
                        },
                        new
                        {
                            Id = 40,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "10",
                            UserId = "10"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lie on a bench with a barbell and lower it to your chest, then press it back up.",
                            MuscleGroupId = 1,
                            Name = "Bench Press",
                            Reps = 12,
                            Sets = 4,
                            Weight = 60.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Similar to bench press, but performed on an inclined bench, targeting upper chest.",
                            MuscleGroupId = 1,
                            Name = "Incline Bench Press",
                            Reps = 10,
                            Sets = 4,
                            Weight = 55.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hold dumbbells above your chest, then lower them out to the sides, and bring them back up.",
                            MuscleGroupId = 1,
                            Name = "Dumbbell Flyes",
                            Reps = 12,
                            Sets = 3,
                            Weight = 20.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Start in a plank position, lower your body until your chest almost touches the ground, then push back up.",
                            MuscleGroupId = 1,
                            Name = "Push-ups",
                            Reps = 15,
                            Sets = 3,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Hang from a bar with palms facing away, then pull yourself up until your chin passes the bar.",
                            MuscleGroupId = 2,
                            Name = "Pull-ups",
                            Reps = 10,
                            Sets = 4,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Stand with feet hip-width apart, bend at hips and knees to grip the bar, then lift it by extending hips and knees.",
                            MuscleGroupId = 2,
                            Name = "Deadlifts",
                            Reps = 8,
                            Sets = 4,
                            Weight = 135.0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Bend at the hips, holding a barbell, then pull the barbell up to your lower chest while keeping your back straight.",
                            MuscleGroupId = 2,
                            Name = "Bent-over Rows",
                            Reps = 10,
                            Sets = 4,
                            Weight = 75.0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Stand with feet shoulder-width apart, lower your body as if sitting back into a chair, then return to standing.",
                            MuscleGroupId = 3,
                            Name = "Squats",
                            Reps = 12,
                            Sets = 4,
                            Weight = 95.0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Sit on a leg press machine and press the weight up by extending your legs, then lower it back down.",
                            MuscleGroupId = 3,
                            Name = "Leg Press",
                            Reps = 12,
                            Sets = 4,
                            Weight = 180.0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Step forward with one leg and lower your hips until both knees are bent at about a 90-degree angle, then return to standing.",
                            MuscleGroupId = 3,
                            Name = "Lunges",
                            Reps = 10,
                            Sets = 4,
                            Weight = 25.0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Sit on a bench with back support, hold dumbbells at shoulder height, then press them up above your head.",
                            MuscleGroupId = 4,
                            Name = "Shoulder Press",
                            Reps = 12,
                            Sets = 4,
                            Weight = 30.0
                        },
                        new
                        {
                            Id = 12,
                            Description = "Stand with dumbbells at your sides, then lift them out to the sides until arms are parallel to the ground.",
                            MuscleGroupId = 4,
                            Name = "Lateral Raises",
                            Reps = 12,
                            Sets = 4,
                            Weight = 12.0
                        },
                        new
                        {
                            Id = 13,
                            Description = "Hold dumbbells in front of thighs with palms facing down, then lift them up to shoulder height.",
                            MuscleGroupId = 4,
                            Name = "Front Raises",
                            Reps = 12,
                            Sets = 4,
                            Weight = 15.0
                        },
                        new
                        {
                            Id = 14,
                            Description = "Stand with dumbbells at your sides, then curl them up towards your shoulders, keeping elbows close to your body.",
                            MuscleGroupId = 5,
                            Name = "Bicep Curls",
                            Reps = 12,
                            Sets = 4,
                            Weight = 20.0
                        },
                        new
                        {
                            Id = 15,
                            Description = "Sit on a bench with hands next to hips, fingers facing forward, then lift yourself off the bench and lower your body by bending your elbows.",
                            MuscleGroupId = 5,
                            Name = "Tricep Dips",
                            Reps = 12,
                            Sets = 4,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 16,
                            Description = "Stand with dumbbells at your sides, then curl them up towards your shoulders with palms facing each other.",
                            MuscleGroupId = 5,
                            Name = "Hammer Curls",
                            Reps = 12,
                            Sets = 4,
                            Weight = 20.0
                        },
                        new
                        {
                            Id = 17,
                            Description = "Lie on your back with knees bent and feet flat on the ground, then lift your shoulders towards your knees, keeping lower back on the ground.",
                            MuscleGroupId = 6,
                            Name = "Crunches",
                            Reps = 20,
                            Sets = 3,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 18,
                            Description = "Get into a push-up position but with elbows on the ground, and hold that position, keeping your body straight from head to heels.",
                            MuscleGroupId = 6,
                            Name = "Planks",
                            Reps = 60,
                            Sets = 3,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 19,
                            Description = "Sit on the ground with knees bent and feet lifted, then twist your torso from side to side, touching the ground beside you with each twist.",
                            MuscleGroupId = 6,
                            Name = "Russian Twists",
                            Reps = 20,
                            Sets = 3,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 20,
                            Description = "Lie on your back with legs straight, then lift them up towards the ceiling, keeping them straight, then lower them back down without touching the ground.",
                            MuscleGroupId = 6,
                            Name = "Leg Raises",
                            Reps = 15,
                            Sets = 3,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 21,
                            Description = "Sit on the chest fly machine with your back flat against the pad. Grasp the handles and bring them together in front of you, keeping your arms slightly bent.",
                            MuscleGroupId = 1,
                            Name = "Chest Fly Machine",
                            Reps = 12,
                            Sets = 4,
                            Weight = 65.0
                        },
                        new
                        {
                            Id = 22,
                            Description = "Sit down at a lat pulldown machine and grab the bar with palms facing away from you. Pull the bar down to your chest, then slowly return it to the starting position.",
                            MuscleGroupId = 2,
                            Name = "Lat Pulldown",
                            Reps = 12,
                            Sets = 4,
                            Weight = 90.0
                        },
                        new
                        {
                            Id = 23,
                            Description = "Lie face down on the leg curl machine and hook your heels under the padded lever. Curl your legs up towards your buttocks, then slowly lower them back down.",
                            MuscleGroupId = 3,
                            Name = "Leg Curl Machine",
                            Reps = 12,
                            Sets = 4,
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 24,
                            Description = "Sit on a military press machine with your back flat against the pad. Grab the handles and press them up overhead, then lower them back down to shoulder height.",
                            MuscleGroupId = 4,
                            Name = "Military Press",
                            Reps = 10,
                            Sets = 4,
                            Weight = 40.0
                        },
                        new
                        {
                            Id = 25,
                            Description = "Lie face down on a hamstring curl machine and position your ankles under the padded lever. Curl your heels up towards your buttocks, then slowly lower them back down.",
                            MuscleGroupId = 3,
                            Name = "Hamstring Curls",
                            Reps = 12,
                            Sets = 4,
                            Weight = 50.0
                        });
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.MuscleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MuscleGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chest"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Back"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Legs"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Arms"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Abs"
                        });
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "967e1eb0-b4b3-42f7-9644-6bfede7d51b8",
                            DisplayName = "John Doe",
                            Email = "john.doe@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            LastName = "Doe",
                            Length = 180.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHN.DOE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHVxjzNFEwHtjRB9hQZnbwMFzdgtEz8K7N6RETgzfWLWgkMtNenkG9ZWNfnoY4qMFA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "36b7a546-c0ba-467a-ab7d-5271d74d09ad",
                            TwoFactorEnabled = false,
                            UserName = "john.doe@example.com",
                            Weight = 75.0
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1985, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "830bef93-6fb7-456b-aacd-80988b72ba87",
                            DisplayName = "Jane Smith",
                            Email = "jane.smith@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Length = 165.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "JANE.SMITH@EXAMPLE.COM",
                            NormalizedUserName = "JANE.SMITH@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFn6nkH0JNmYKxUfw8/DFh+vqPTCpOV8slVk/Zfdd/9eOBitGcO9fEnKrKlPsmX8Ew==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eed49ce7-ae9b-4582-91f3-0c6ba446ac2d",
                            TwoFactorEnabled = false,
                            UserName = "JANESMITH",
                            Weight = 60.0
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1995, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "53177d01-98b7-44f2-83c1-1c8667bc9f92",
                            DisplayName = "Mike Johnson",
                            Email = "mike.johnson@example.com",
                            EmailConfirmed = true,
                            FirstName = "Mike",
                            LastName = "Johnson",
                            Length = 175.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "MIKE.JOHNSON@EXAMPLE.COM",
                            NormalizedUserName = "MIKE.JOHNSON@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDNF7CUklCruWmAT0srB/rPRelM79bBxEvR+yZvFJNRvhju++XdR8278mTVFWrTtJQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2fcda9c7-5ebc-4f97-8354-041039083cd1",
                            TwoFactorEnabled = false,
                            UserName = "mike.johnson@example.com",
                            Weight = 80.0
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1988, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d89cd6bb-8390-4a1c-915a-9cf326cd4069",
                            DisplayName = "Emily Brown",
                            Email = "emily.brown@example.com",
                            EmailConfirmed = true,
                            FirstName = "Emily",
                            LastName = "Brown",
                            Length = 170.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "EMILY.BROWN@EXAMPLE.COM",
                            NormalizedUserName = "EMILY.BROWN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHhtHq7Sf0jqSYAvuKKudYdl4QIac1uUi/RIhtXefmVKRSA2dmkYgV8cMRkVyozvGQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c15c2c12-21d1-476f-8eb2-3c488ac9b0aa",
                            TwoFactorEnabled = false,
                            UserName = "emily.brown@example.com",
                            Weight = 65.0
                        },
                        new
                        {
                            Id = "5",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1992, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4d1caf2f-5c09-41f3-b87c-9ab0e9b6f8e6",
                            DisplayName = "Chris Williams",
                            Email = "chris.williams@example.com",
                            EmailConfirmed = true,
                            FirstName = "Chris",
                            LastName = "Williams",
                            Length = 185.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "CHRIS.WILLIAMS@EXAMPLE.COM",
                            NormalizedUserName = "CHRIS.WILLIAMS@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKc9psg3bU0h/L9/nqT6y08dynF31+yaeHkBGeuRDrLQMSEybL7FJy9LfdKWu1dAZg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7fb2eb6b-3577-4309-b37e-98845ca7e0e6",
                            TwoFactorEnabled = false,
                            UserName = "chris.williams@example.com",
                            Weight = 90.0
                        },
                        new
                        {
                            Id = "6",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1983, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d943da9b-aad2-40d9-a11e-902974173cb5",
                            DisplayName = "Sarah Taylor",
                            Email = "sarah.taylor@example.com",
                            EmailConfirmed = true,
                            FirstName = "Sarah",
                            LastName = "Taylor",
                            Length = 160.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "SARAH.TAYLOR@EXAMPLE.COM",
                            NormalizedUserName = "SARAH.TAYLOR@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJlRSWAkaNnG0iaGfSkCxR7qXfQ+WNFUGv82A2maLm59fnFVlkpq3RKkLmEobrzcJw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "be5ec186-072d-4b2a-a30e-7f878a99c773",
                            TwoFactorEnabled = false,
                            UserName = "sarah.taylor@example.com",
                            Weight = 55.0
                        },
                        new
                        {
                            Id = "7",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1998, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "157da908-1758-4b56-9af7-694a40db3fb5",
                            DisplayName = "Kevin Miller",
                            Email = "kevin.miller@example.com",
                            EmailConfirmed = true,
                            FirstName = "Kevin",
                            LastName = "Miller",
                            Length = 190.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "KEVIN.MILLER@EXAMPLE.COM",
                            NormalizedUserName = "KEVIN.MILLER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECA4P1xs8mRS8nQrmtJPF5al8d8GV/ulojTczdZBQyGrL+26811YRurB4Vd1ZHjvbA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7febfe43-c1b1-401d-abc2-79528c1a571e",
                            TwoFactorEnabled = false,
                            UserName = "kevin.miller@example.com",
                            Weight = 85.0
                        },
                        new
                        {
                            Id = "8",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1991, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5f044eab-db4a-484f-87b1-985da24fb34d",
                            DisplayName = "JessicaWilson",
                            Email = "jessica.wilson@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jessica",
                            LastName = "Wilson",
                            Length = 170.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "JESSICA.WILSON@EXAMPLE.COM",
                            NormalizedUserName = "JESSICA.WILSON@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGyI+COThVMl3uaFDioZXrLNpgDxNkR07ivyayxt/KFE6Ol70ALBzfxb2KlL5Z5f/g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d1f4e2ae-327e-47c7-ad90-f191c5afa914",
                            TwoFactorEnabled = false,
                            UserName = "jessica.wilson@example.com",
                            Weight = 70.0
                        },
                        new
                        {
                            Id = "9",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1987, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "99439933-12fb-4d61-8f45-f76d1daac101",
                            DisplayName = "David Anderson",
                            Email = "david.anderson@example.com",
                            EmailConfirmed = true,
                            FirstName = "David",
                            LastName = "Anderson",
                            Length = 180.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "DAVID.ANDERSON@EXAMPLE.COM",
                            NormalizedUserName = "DAVID.ANDERSON@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP9jOHwkE/oedPaYKIK6szOXPJU34BhXgAZzOEqZAoT8Z2b0PpyxGsTfzNlHmhk3Lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f08483d9-1612-4921-acea-122d611d5e6e",
                            TwoFactorEnabled = false,
                            UserName = "david.anderson@example.com",
                            Weight = 75.0
                        },
                        new
                        {
                            Id = "10",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1993, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c0d85d19-0aa6-4a92-85cc-061c748f606a",
                            DisplayName = "AmandaClark",
                            Email = "amanda.clark@example.com",
                            EmailConfirmed = true,
                            FirstName = "Amanda",
                            LastName = "Clark",
                            Length = 155.0,
                            LockoutEnabled = false,
                            NormalizedEmail = "AMANDA.CLARK@EXAMPLE.COM",
                            NormalizedUserName = "AMANDA.CLARK@EXAMPLE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKQKpBbY9gXNBlI0mZAsF3Pq1i0De8JuRNOOjDm+JKHDpiQ0QUeqCkRpEKKBUxuNQQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "918926d0-437c-4965-a1b1-9747ca3bd096",
                            TwoFactorEnabled = false,
                            UserName = "amanda.clark@example.com",
                            Weight = 50.0
                        });
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MuscleGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This workout targets the chest muscles.",
                            Duration = 60,
                            MuscleGroupId = 1,
                            Name = "Chest workout",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This workout targets the back muscles.",
                            Duration = 45,
                            MuscleGroupId = 2,
                            Name = "Back workout",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This workout targets the leg muscles.",
                            Duration = 55,
                            MuscleGroupId = 3,
                            Name = "Legs workout",
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "This workout targets the shoulder muscles.",
                            Duration = 50,
                            MuscleGroupId = 4,
                            Name = "Shoulders workout",
                            UserId = "4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "This workout targets the arm muscles.",
                            Duration = 40,
                            MuscleGroupId = 5,
                            Name = "Arms workout",
                            UserId = "5"
                        },
                        new
                        {
                            Id = 6,
                            Description = "This workout targets the abdominal muscles.",
                            Duration = 30,
                            MuscleGroupId = 6,
                            Name = "Abs workout",
                            UserId = "6"
                        });
                });

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.Workout", null)
                        .WithMany()
                        .HasForeignKey("WorkoutsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.Exercise", b =>
                {
                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany("Exercises")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.Workout", b =>
                {
                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany("Workouts")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pri.PE_Milan_Cheraft.Core.Entities.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId");

                    b.Navigation("MuscleGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.MuscleGroup", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("Pri.PE_Milan_Cheraft.Core.Entities.User", b =>
                {
                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
